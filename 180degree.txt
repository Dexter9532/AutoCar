#include <stdint.h>
#include <avr/io.h>
#include <util/delay.h>
#include <stdio.h>

// Function to initialize UART for printing
void uart_init(void) {
    // Set baud rate
    uint16_t baud_rate = 103; // 9600 baud for 16 MHz clock
    UBRR0H = (uint8_t)(baud_rate >> 8);
    UBRR0L = (uint8_t)baud_rate;

    // Enable transmitter
    UCSR0B = (1 << TXEN0);

    // Set frame format: 8 data bits, 1 stop bit
    UCSR0C = (1 << UCSZ01) | (1 << UCSZ00);
}

// Function to send a character over UART
int uart_putchar(char c, FILE *stream) {
    if (c == '\n') {
        uart_putchar('\r', stream);
    }
    while (!(UCSR0A & (1 << UDRE0)));
    UDR0 = c;
    return 0;
}

// Setup the standard output stream
FILE uart_output = FDEV_SETUP_STREAM(uart_putchar, NULL, _FDEV_SETUP_WRITE);

void setup() {
    // Initialize UART
    uart_init();

    // Set the standard output to use UART
    stdout = &uart_output;

    // Enable internal pull-up resistors for SDA (A4) and SCL (A5)
    DDRC &= ~((1 << DDC4) | (1 << DDC5)); // Set A4 and A5 as input
    PORTC |= (1 << PORTC4) | (1 << PORTC5); // Enable pull-up resistors on A4 and A5
}

int main(void) {
    setup();

    while (1) {
        // Placeholder for the distance value
        int distanceMillimeters = 123; // Replace with actual sensor reading if available

        // Print the distance measured by the sensor
        printf("Distance: %d mm\n", distanceMillimeters);

        // Delay for a short period before taking the next sample
        _delay_ms(1000);
    }

    return 0;
}