#include <Servo.h>
#include <Wire.h>
#include <OPT3101.h>
#include <Arduino.h>

// === PIN-KONFIGURATION ===
#define L_EN 8    
#define R_EN 7   
#define L_PWM 5   
#define R_PWM 6   
#define SERVO_PIN 9

// === OBJEKT ===
Servo steeringServo;
OPT3101 sensor;

// === KONSTANTER ===
const int targetDistance = 600;       // önskat avstånd i mm
const int tolerance = 25;             // dödzon (mm)
const int maxDeviation = 120;          // hur mycket vi max bryr oss om (mm)
const int maxSpeed = 60;
const int minSpeed = 50;

void setup() {
    Serial.begin(9600);
    Wire.begin();

    sensor.init();
    sensor.configureDefault();

    steeringServo.attach(SERVO_PIN);
    steeringServo.write(85);  // rakt fram

    pinMode(L_EN, OUTPUT);
    pinMode(R_EN, OUTPUT);
    pinMode(L_PWM, OUTPUT);
    pinMode(R_PWM, OUTPUT);

    digitalWrite(L_EN, HIGH);
    digitalWrite(R_EN, HIGH);
}

void loop() {
    // === MÄT MED OTP3101 ===
    sensor.startSample();
    delay(1);
    while (!sensor.isSampleDone()) delay(1);
    sensor.readOutputRegs();
    int distance = sensor.distanceMillimeters;

    Serial.print("Avstånd: ");
    Serial.println(distance);

    // === BERÄKNA FEL OCH STYRNING ===
    int error = targetDistance - distance;
    int angle = 85;

    if (abs(error) < tolerance) {
        angle = 85; // rakt fram
    } else if (error > 0) {
        // för långt ifrån → sväng vänster
        angle = 85 + map(constrain(error, 0, maxDeviation), 0, maxDeviation, 0, 20);
    } else {
        // för nära → sväng höger
        angle = 85 - map(constrain(-error, 0, maxDeviation), 0, maxDeviation, 0, 20);
    }

    angle = constrain(angle, 50, 120);
    steeringServo.write(angle);

    // === BERÄKNA HASTIGHET BASERAT PÅ FEL ===
    int absError = abs(error);
    absError = constrain(absError, 0, maxDeviation);

    int speed = map(absError, 0, maxDeviation, maxSpeed, minSpeed); // mer fel = lägre fart
    speed = constrain(speed, minSpeed, maxSpeed);

    analogWrite(R_PWM, speed);
    analogWrite(L_PWM, 0); // kör bara höger motor framåt

    delay(10);
}
